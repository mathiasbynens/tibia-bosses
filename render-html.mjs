import fs from 'node:fs/promises';
import { escape as escapeHtml } from 'lodash-es';
import { minify as minifyHtml } from 'html-minifier-terser';

const formatNumber = (number) => {
	return `${number.toFixed(2)}%`;
};

const render = (data) => {
	const output = ['<div class="table-wrapper"><table><thead><tr><th>Boss<th>Confidence<tbody>'];
	for (const boss of data.bosses) {
		output.push(`<tr><td>${escapeHtml(boss.name)}<td>${formatNumber(boss.chance)}`);
	}
	output.push(`</table></div><p>Last updated on <time>${escapeHtml(data.timestamp)}</time>.`);
	const html = output.join('');
	return html;
};

const json = await fs.readFile('./data/vunira/bosses-latest.json', 'utf8');
const data = JSON.parse(json);

const htmlTemplate = await fs.readFile('./templates/index.html', 'utf8');
const html = htmlTemplate.toString().replace('%%%DATA%%%', render(data));
const minifiedHtml = await minifyHtml(html, {
	collapseBooleanAttributes: true,
	collapseInlineTagWhitespace: false,
	collapseWhitespace: true,
	conservativeCollapse: false,
	decodeEntities: true,
	html5: true,
	includeAutoGeneratedTags: false,
	minifyCSS: true,
	minifyJS: true,
	preserveLineBreaks: false,
	preventAttributesEscaping: true,
	removeAttributeQuotes: true,
	removeComments: true,
	removeEmptyAttributes: true,
	removeEmptyElements: false,
	removeOptionalTags: false,
	removeRedundantAttributes: true,
	removeTagWhitespace: false,
	sortAttributes: true,
	sortClassName: true,
});
await fs.writeFile('./dist/index.html', minifiedHtml);
